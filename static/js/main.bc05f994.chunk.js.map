{"version":3,"sources":["env.tsx","MoviesDB.ts","components/MovieRow/index.tsx","components/FeaturedMovie/index.tsx","components/Header/index.tsx","App.tsx","index.tsx"],"names":["API_KEY","basicFecth","endpoint","a","fetch","json","MoviesDB","getHomeList","slug","title","itens","getMovieInfo","movieId","movieType","info","MovieRow","React","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","size","listW","results","length","style","marginLeft","width","transition","map","item","key","src","poster_path","alt","original_title","FeaturedMovie","firtDate","Date","first_air_date","genres","i","push","name","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","vote_average","getFullYear","number_of_seasons","overview","join","Header","black","fill","viewBox","focusable","id","d","App","useState","movieList","setMovieList","featureData","setFeatureData","blackHeader","setBlackHeader","useEffect","list","originals","filter","rand","floor","random","chosen","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","render","document","getElementById"],"mappings":"iPAAaA,G,MAAU,oCCOjBC,EAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACDC,MAAM,GAAD,OAHP,gCAGO,OAAcF,IADlB,uCAC+BG,QAD/B,2CAAH,sDAuEDC,EAnEE,CACbC,YAAY,WAAD,4BAAE,sBAAAJ,EAAA,sEAKYF,EAAW,yDAAD,OAA0DD,IALhF,gCAGDQ,KAAM,YACNC,MAAO,uBACPC,MALC,eAUYT,EAAW,6CAAD,OAA8CD,IAVpE,gCAQDQ,KAAM,WACNC,MAAO,yBACPC,MAVC,gBAeYT,EAAW,4CAAD,OAA6CD,IAfnE,iCAaDQ,KAAM,WACNC,MAAO,UACPC,MAfC,gBAoBYT,EAAW,yDAAD,OAA0DD,IApBhF,iCAkBDQ,KAAM,SACNC,MAAO,OACPC,MApBC,gBAyBYT,EAAW,yDAAD,OAA0DD,IAzBhF,iCAuBDQ,KAAM,SACNC,MAAO,UACPC,MAzBC,gBA8BYT,EAAW,yDAAD,OAA0DD,IA9BhF,mCA4BDQ,KAAM,SACNC,MAAO,SACPC,MA9BC,iBAmCYT,EAAW,4DAAD,OAA6DD,IAnCnF,mCAiCDQ,KAAM,UACNC,MAAO,UACPC,MAnCC,iBAwCYT,EAAW,yDAAD,OAA0DD,IAxChF,mCAsCDQ,KAAM,cACNC,MAAO,gBACPC,MAxCC,mHAAF,kDAAC,GA8CZC,aAAa,WAAD,4BAAE,WAAOC,EAAiBC,GAAxB,eAAAV,EAAA,0DAEPS,EAFO,sBAGCC,EAHD,OAIG,UAJH,OAOI,OAPJ,uCAKeZ,EAAW,UAAD,OAAWW,EAAX,mCAA6CZ,IALtE,cAKEc,EALF,oDAQeb,EAAW,OAAD,OAAQW,EAAR,mCAA0CZ,IARnE,eAQEc,EARF,2CAWEA,EAAO,KAXT,sDAgBFA,GAhBE,4CAAF,qDAAC,I,+BCtDJC,EAA+D,SAAC,GAAoB,IAAnBN,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAAW,EAE/DM,WAAe,GAFgD,mBAErFC,EAFqF,KAE5EC,EAF4E,KAsB5F,OACI,sBAAKC,UAAU,WAAf,UACI,6BAAKV,IAEL,qBAAKU,UAAU,yBAAyBC,QAtB7B,WACf,IAAIC,EAAIJ,EAAUK,KAAKC,MAAMC,OAAOC,WAAa,GAC9CJ,EAAI,IACHA,EAAI,GAERH,EAAWG,IAiBP,SACI,cAAC,IAAD,CAAgBF,UAAU,iBAAiBO,KAAK,KAAKjB,MAAM,oBAG/D,qBAAKU,UAAU,0BAA0BC,QAlB7B,WAChB,IAAIC,EAAIJ,EAAUK,KAAKC,MAAMC,OAAOC,WAAa,GAC7CE,EAA+B,IAAvBjB,EAAMkB,QAAQC,OACvBL,OAAOC,WAAaE,EAAQN,IAE3BA,EAAKG,OAAOC,WAAaE,EAAS,IAEtCT,EAAWG,IAWP,SACI,cAAC,IAAD,CAAcF,UAAU,eAAeO,KAAK,KAAKjB,MAAM,sBAG3D,qBAAKU,UAAU,qBAAf,SAEI,qBAAKA,UAAU,iBACXW,MAAO,CACHC,WAAYd,EACZe,MAA8B,IAAvBtB,EAAMkB,QAAQC,OACrBI,WAAY,iBAJpB,SAQIvB,EAAMkB,QAAQC,OAAS,GAAKnB,EAAMkB,QAAQM,KAAI,SAACC,EAAUC,GAAX,OAC1C,qBAAejB,UAAU,iBAAzB,SACI,qBAAKkB,IAAG,0CAAqCF,EAAKG,aAAeC,IAAKJ,EAAKK,kBADrEJ,cC9CrBK,G,MAAsD,SAAC,GAAY,IAAXN,EAAU,EAAVA,KAC7DO,EAAW,IAAIC,KAAKR,EAAKS,gBACzBC,EAAgB,GAEpB,IAAI,IAAIC,KAAKX,EAAKU,OACdA,EAAOE,KAAKZ,EAAKU,OAAOC,GAAGE,MAE/B,OACI,yBAAS7B,UAAU,WAAWW,MAAO,CACjCmB,eAAgB,QAChBC,mBAAoB,SACpBC,gBAAgB,0CAAD,OAA4ChB,EAAKiB,cAAjD,MAHnB,SAKI,qBAAKjC,UAAU,qBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,iBAAf,SACKgB,EAAKa,OAEV,sBAAK7B,UAAU,iBAAf,UACI,sBAAKA,UAAU,4CAAf,UAA4DgB,EAAKkB,aAAjE,aACA,qBAAKlC,UAAU,sBAAf,SAAsCuB,EAASY,gBAC/C,sBAAKnC,UAAU,sBAAf,UAAsCgB,EAAKoB,kBAA3C,aAAmG,IAA3BpB,EAAKoB,kBAA0B,IAAM,SAEjH,qBAAKpC,UAAU,wBAAf,SAAwCgB,EAAKqB,WAC7C,sBAAKrC,UAAU,oBAAf,UACI,wBAAQA,UAAU,0BAAlB,6BACA,wBAAQA,UAAU,yBAAlB,8BAEJ,sBAAKA,UAAU,mBAAf,UACI,kDAEI0B,EAAOY,KAAK,kBC/B3BC,G,MAAoD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAC/D,OACI,yBAAQxC,UAAWwC,EAAQ,QAAU,GAArC,UACI,qBAAKxC,UAAU,eAAf,SACI,qBAAKyC,KAAK,MAAMC,QAAQ,aAAaC,UAAU,QAA/C,SAAuD,mBAAGC,GAAG,eAAN,SAAqB,sBAAMC,EAAE,wkEAAwkED,GAAG,kBAEnqE,qBAAK5C,UAAU,eAAf,SACI,qBAAKkB,IAAI,gFAAgFE,IAAI,mBCsE9F0B,MAlEf,WAAgB,IAAD,EAEqBC,mBAAgB,IAFrC,mBAENC,EAFM,KAEKC,EAFL,OAGyBF,mBAAS,IAHlC,mBAGNG,EAHM,KAGOC,EAHP,OAIyBJ,oBAAS,GAJlC,mBAINK,EAJM,KAIOC,EAJP,KAwCb,OAlCAC,qBAAU,YAEK,uCAAG,oCAAAtE,EAAA,sEACGG,EAASC,cADZ,cACVmE,EADU,OAEdN,EAAaM,GAGTC,EAAYD,EAAKE,QAAO,SAAAzC,GAAI,MAAmB,cAAdA,EAAK3B,QACtCqE,EAAOvD,KAAKwD,MAAMxD,KAAKyD,SAAWJ,EAAU,GAAGjE,MAAMkB,QAAQC,QAC7DmD,EAASL,EAAU,GAAGjE,MAAMkB,QAAQiD,GAP1B,SAQGvE,EAASK,aAAaqE,EAAOjB,GAAI,MARpC,OAQVjD,EARU,OASdwD,EAAexD,GATD,4CAAH,qDAabmE,KACC,IAEHR,qBAAU,WACR,IAAMS,EAAiB,WAClB1D,OAAO2D,QAAU,GAClBX,GAAe,GAEfA,GAAe,IAMnB,OAFAhD,OAAO4D,iBAAiB,SAAUF,GAE3B,WACL1D,OAAO6D,oBAAoB,SAAUH,MAEtC,IAGD,sBAAK/D,UAAU,OAAf,UACE,cAAC,EAAD,CAAQwC,MAAOY,IACdF,GAAe,cAAC,EAAD,CAAelC,KAAMkC,IACrC,yBAASlD,UAAU,QAAnB,SAGIgD,EAAUjC,KAAI,SAACC,EAAMC,GAAP,OACV,cAAC,EAAD,CAAoB3B,MAAO0B,EAAK1B,MAAOC,MAAOyB,EAAKzB,OAApC0B,QAKvB,gDACY,sBAAMkD,KAAK,MAAMC,aAAW,UAA5B,oBADZ,qBAICpB,EAAUtC,QAAU,GACrB,qBAAKV,UAAU,UAAf,SACE,qBAAKkB,IAAI,yGAAyGE,IAAI,kBCrE9HiD,iBACE,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bc05f994.chunk.js","sourcesContent":["export const API_KEY = \"1dce5994ad2a55e6b2a0f16febe19b1c\"","/**\n * This file holds the connection with the API\n */\nimport { API_KEY } from './env';\n\nconst BaseUrl = \"https://api.themoviedb.org/3\";\n\nconst basicFecth = async (endpoint: string) => {\n    return (await fetch(`${BaseUrl}${endpoint}`)).json();\n}\n\nconst MoviesDB = {\n    getHomeList: async () => {\n        return [\n            {\n                slug: \"originais\",\n                title: \"Originais do Netflix\",\n                itens: await basicFecth(`/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            }, \n            {\n                slug: \"trending\",\n                title: \"Recomendados para voce\",\n                itens: await basicFecth(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            }, \n            {\n                slug: \"toprated\",\n                title: \"Em alta\",\n                itens: await basicFecth(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`)\n            }, \n            {\n                slug: \"action\",\n                title: \"Acao\",\n                itens: await basicFecth(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            }, \n            {\n                slug: \"comedy\",\n                title: \"Comedia\",\n                itens: await basicFecth(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            }, \n            {\n                slug: \"horror\",\n                title: \"Terror\",\n                itens: await basicFecth(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            }, \n            {\n                slug: \"romance\",\n                title: \"Romance\",\n                itens: await basicFecth(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            }, \n            {\n                slug: \"documentary\",\n                title: \"Documentarios\",\n                itens: await basicFecth(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            }, \n            \n        ];\n    },\n\n    getMovieInfo: async (movieId: number, movieType: string) => {\n        let info: any;\n        if(movieId) {\n            switch(movieType){\n                case 'movei':\n                    info = await basicFecth(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                 case 'tv':\n                    info = await basicFecth(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                default:\n                    info = null;\n                break;\n            }\n        }\n\n         return info;\n    }\n}\n\nexport default MoviesDB;","import * as React from 'react';\nimport './styles.css';\nimport {NavigateBefore, NavigateNext} from '@styled-icons/material'\n\nexport const MovieRow: React.FunctionComponent<{title:string, itens:any}> = ({title, itens}) => {\n\n    const [scrollX, setScrollX]= React.useState(0);\n\n    const handleLeft = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2);\n        if(x > 0){\n            x = 0;\n        }\n        setScrollX(x);\n    }\n\n    const handleRight = () => {\n        let x = scrollX - Math.round(window.innerWidth / 2);\n        let listW = itens.results.length * 150;\n        if(window.innerWidth - listW > x)\n        {\n            x = (window.innerWidth - listW) - 60;\n        }\n        setScrollX(x);\n    }\n\n    return (\n        <div className=\"movierow\">\n            <h2>{title}</h2>\n\n            <div className=\"movierow--buttons left\" onClick={handleLeft}>\n                <NavigateBefore className=\"NavigateBefore\" size=\"50\" title=\"Navigate Back\"></NavigateBefore>\n            </div>\n\n            <div className=\"movierow--buttons right\" onClick={handleRight}>\n                <NavigateNext className=\"NavigateNext\" size=\"50\" title=\"Navigate Foward\"></NavigateNext>\n            </div>\n\n            <div className=\"movierow--listarea\">\n\n                <div className=\"movierow--list\"\n                    style={{\n                        marginLeft :scrollX,\n                        width: itens.results.length * 150,\n                        transition: 'all ease 0.5s'\n                    }}\n                >\n                {\n                    itens.results.length > 0 && itens.results.map((item:any, key:number) => (\n                        <div key={key} className=\"movierow--item\">\n                            <img src={`https://image.tmdb.org/t/p/w300/${item.poster_path}`} alt={item.original_title}/>\n                        </div>\n                    ))\n                }\n                </div>\n                \n            </div>\n\n            \n        </div>\n    )\n}","import * as React from 'react'\nimport './styles.css'\n\nexport const FeaturedMovie: React.FunctionComponent<{item: any}> = ({item}) => {\n    let firtDate = new Date(item.first_air_date)\n    let genres: any[] = [];\n\n    for(let i in item.genres) {\n        genres.push(item.genres[i].name)\n    }\n    return (\n        <section className=\"featured\" style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n            <div className=\"featured--vertical\">\n                <div className=\"featured--horizontal\">\n                    <div className=\"featured--name\">\n                        {item.name}\n                    </div>\n                    <div className=\"featured--info\">\n                        <div className=\"featured--info-item featured--info--green\">{item.vote_average} pontos</div>\n                        <div className=\"featured--info-item\">{firtDate.getFullYear()}</div>\n                        <div className=\"featured--info-item\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                    </div>\n                    <div className=\"featured--description\">{item.overview}</div>\n                    <div className=\"featured--buttons\">\n                        <button className=\"featured--button--light\">► Assistir</button>\n                        <button className=\"featured--button--dark\">+ Minha Lista</button>\n                    </div>\n                    <div className=\"featured--gender\">\n                        <strong>Gêneros: </strong>\n                        {\n                            genres.join(', ')\n                        }\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n","import * as React from 'react'\nimport './styles.css'\n\nexport const Header: React.FunctionComponent<{black: boolean}> = ({black}) => {\n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <svg fill=\"red\" viewBox=\"0 0 111 30\" focusable=\"false\"><g id=\"netflix-logo\"><path d=\"M105.06233,14.2806261 L110.999156,30 C109.249227,29.7497422 107.500234,29.4366857 105.718437,29.1554972 L102.374168,20.4686475 L98.9371075,28.4375293 C97.2499766,28.1563408 95.5928391,28.061674 93.9057081,27.8432843 L99.9372012,14.0931671 L94.4680851,-5.68434189e-14 L99.5313525,-5.68434189e-14 L102.593495,7.87421502 L105.874965,-5.68434189e-14 L110.999156,-5.68434189e-14 L105.06233,14.2806261 Z M90.4686475,-5.68434189e-14 L85.8749649,-5.68434189e-14 L85.8749649,27.2499766 C87.3746368,27.3437061 88.9371075,27.4055675 90.4686475,27.5930265 L90.4686475,-5.68434189e-14 Z M81.9055207,26.93692 C77.7186241,26.6557316 73.5307901,26.4064111 69.250164,26.3117443 L69.250164,-5.68434189e-14 L73.9366389,-5.68434189e-14 L73.9366389,21.8745899 C76.6248008,21.9373887 79.3120255,22.1557784 81.9055207,22.2804387 L81.9055207,26.93692 Z M64.2496954,10.6561065 L64.2496954,15.3435186 L57.8442216,15.3435186 L57.8442216,25.9996251 L53.2186709,25.9996251 L53.2186709,-5.68434189e-14 L66.3436123,-5.68434189e-14 L66.3436123,4.68741213 L57.8442216,4.68741213 L57.8442216,10.6561065 L64.2496954,10.6561065 Z M45.3435186,4.68741213 L45.3435186,26.2498828 C43.7810479,26.2498828 42.1876465,26.2498828 40.6561065,26.3117443 L40.6561065,4.68741213 L35.8121661,4.68741213 L35.8121661,-5.68434189e-14 L50.2183897,-5.68434189e-14 L50.2183897,4.68741213 L45.3435186,4.68741213 Z M30.749836,15.5928391 C28.687787,15.5928391 26.2498828,15.5928391 24.4999531,15.6875059 L24.4999531,22.6562939 C27.2499766,22.4678976 30,22.2495079 32.7809542,22.1557784 L32.7809542,26.6557316 L19.812541,27.6876933 L19.812541,-5.68434189e-14 L32.7809542,-5.68434189e-14 L32.7809542,4.68741213 L24.4999531,4.68741213 L24.4999531,10.9991564 C26.3126816,10.9991564 29.0936358,10.9054269 30.749836,10.9054269 L30.749836,15.5928391 Z M4.78114163,12.9684132 L4.78114163,29.3429562 C3.09401069,29.5313525 1.59340144,29.7497422 0,30 L0,-5.68434189e-14 L4.4690224,-5.68434189e-14 L10.562377,17.0315868 L10.562377,-5.68434189e-14 L15.2497891,-5.68434189e-14 L15.2497891,28.061674 C13.5935889,28.3437998 11.906458,28.4375293 10.1246602,28.6868498 L4.78114163,12.9684132 Z\" id=\"Fill-14\"></path></g></svg>\n            </div>\n            <div className=\"header--user\">\n                <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"usuario\"/>\n            </div>\n        </header>\n    )\n}\n","import * as React from 'react';\nimport { useState, useEffect} from 'react';\nimport './App.css';\nimport MoviesDB from './MoviesDB';\nimport { MovieRow } from './components/MovieRow/index';\nimport {FeaturedMovie} from './components/FeaturedMovie/index';\nimport {Header} from './components/Header/index';\n\n/**\n * TO-DO:\n * 1. Buscar entender o uso das funcoes useEffect e useState do react\n * 2. Mudar codigo para Typescript **IMPORTANTE!!!**\n * 3. Adicinar Sytled-components \n */\nfunction App() {\n\n  const [movieList, setMovieList] = useState<any[]>([]);\n  const [featureData, setFeatureData] = useState({});\n  const [blackHeader, setBlackHeader] = useState(false);\n  \n  useEffect(() => {\n    //Pegando toda a lista dos filmes\n    const loadAll = async () => {\n      let list = await MoviesDB.getHomeList()\n      setMovieList(list);\n\n      //pega o filme destaque\n      let originals = list.filter(item  => item.slug === 'originais')\n      let rand = Math.floor(Math.random() * originals[0].itens.results.length)\n      let chosen = originals[0].itens.results[rand]\n      let info = await MoviesDB.getMovieInfo(chosen.id, 'tv')\n      setFeatureData(info)\n\n    }\n\n    loadAll();\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true)\n      } else {\n        setBlackHeader(false)\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener)\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n    }\n  }, [])\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader}></Header>\n      {featureData && <FeaturedMovie item={featureData}/>}\n      <section className=\"lista\">\n        {\n          //importante lembrar de passar a key quando criar loops\n          movieList.map((item, key) => (\n              <MovieRow key={key} title={item.title} itens={item.itens}></MovieRow>\n          ))\n        }\n      </section>\n\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"coracao\">❤</span> por VINICIUSTI\n      </footer>\n\n      {movieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"></img>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}